@model IEnumerable<CookShare.Models.Recipe>

@{
    ViewData["Title"] = "Recipes";
}

<div class="container fade-in">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-primary">Discover Recipes</h1>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus"></i> Create New Recipe
        </a>
    </div>

    <div class="search-container">
        <form asp-action="Index" method="get" class="mb-4">
            <div class="input-group">
                <input type="text" name="searchString" class="form-control" 
                       placeholder="Search recipes by title, ingredients, or category..." 
                       value="@ViewData["CurrentFilter"]" />
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-search"></i> Search
                </button>
            </div>
        </form>
    </div>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 custom-card">
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Title">
                    }
                    else
                    {
                        <img src="/images/default-recipe.jpg" class="card-img-top" alt="Default Recipe Image">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@item.Title</h5>
                        <p class="card-text">@(item.Description?.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description)</p>
                        
                        <div class="recipe-meta">
                            <span><i class="fas fa-clock"></i> @(item.PrepTime + item.CookTime) mins</span>
                            <span><i class="fas fa-utensils"></i> @item.Servings servings</span>
                            <span class="badge badge-primary">@item.Category</span>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted">
                                <i class="fas fa-user"></i> @item.User?.FirstName @item.User?.LastName
                            </div>
                            <div class="recipe-actions">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-primary">
                                    <i class="fas fa-eye"></i> View
                                </a>
                                @if (User.Identity.IsAuthenticated && User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == item.UserId)
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-secondary">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display: inline;">
                                        <button type="submit" class="btn btn-sm btn-danger" 
                                                onclick="return confirm('Are you sure you want to delete this recipe?')">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Add fade-in animation to cards
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.custom-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
                card.classList.add('fade-in');
            });
        });
    </script>
} 